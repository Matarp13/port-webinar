name: Deploy a Service to Production
on:
  workflow_dispatch:
  
jobs:
  get-entity:
    runs-on: ubuntu-latest
    outputs:
      entity: ${{ steps.port-github-action.outputs.entity }}
    steps:
      - id: port-github-action
        name: Get entity from Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          identifier: playground
          blueprint: service
          operation: GET

  check-scorecards-status:
    runs-on: ubuntu-latest
    needs: get-entity
    steps:
      - name: Get entity scorecards
        run: |
          LOCK_STATUS=$(echo '${{needs.get-entity.outputs.entity}}' | jq -r .scorecards.documentation.rules[0].status)
          echo "LOCK_STATUS=${LOCK_STATUS}" >> $GITHUB_ENV
          IDENTIFIER=$(echo '${{needs.get-entity.outputs.entity}}' | jq -r .scorecards.documentation.rules[0].identifier)
          echo "REQUIREMENT=${IDENTIFIER}" >> $GITHUB_ENV
      - name: Check scorecards status ðŸš¦
        if: ${{ env.LOCK_STATUS == 'FAILURE' }}
        run: |
          echo "Service in production is locked due to an unmet requirement - ${REQUIREMENT}"
          echo "Stopping service deployment ðŸ›‘ "
          exit 1

  run-deployment:
    runs-on: ubuntu-latest
    needs: [check-scorecards-status]
    steps:
      - name: Run deployment
        run: echo "Service in production is not locked, continuing deployment"
